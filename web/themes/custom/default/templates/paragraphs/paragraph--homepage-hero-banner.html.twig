{#
/**
 * @file
 * Default theme implementation to display a homepage-hero-banner paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
  'paragraph',
  'paragraph--type--' ~ paragraph.bundle|clean_class,
  view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
  not paragraph.isPublished() ? 'paragraph--unpublished'
]
%}

{% block paragraph %}
  <div{{ attributes.addClass(classes) }}>
    {% block content %}
      {# Handle selected case for title #}
      {% if content.field_uppercase.0['#markup'] %}
        <div>{{ content.field_text_level_1['#items'].0.value | upper }}</div>
        <div>{{ content.field_text_level_2['#items'].0.value | upper }}</div>
        <div>{{ content.field_text_level_3['#items'].0.value | upper }}</div>
      {% else  %}
        <div>{{ content.field_text_level_1['#items'].0.value }}</div>
        <div>{{ content.field_text_level_2['#items'].0.value }}</div>
        <div>{{ content.field_text_level_3['#items'].0.value }}</div>
      {% endif %}
      <div>
        {{ content.field_required_link }}
      </div>
      <div>
        {{ content.field_link }}
      </div>
      <div>
        {# AFRC image #}
        <img src="https://placehold.co/100x70" alt=""/>
        {# Verified Reviews badge #}
        <div id="a1373cf6-fd0b-4166-8721-442e2c455437"></div>
        <script async charset="utf-8" src="https://widgets.rr.skeepers.io/generated/3a985ddb-95cb-b334-15ef-25e66dc92116/a1373cf6-fd0b-4166-8721-442e2c455437.js"></script>
      </div>
      <div>
        {{ content.field_media }}
      </div>
    {% endblock %}
  </div>
{% endblock paragraph %}
